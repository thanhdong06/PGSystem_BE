// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PGSystem_DataAccessLayer.DBContext;

#nullable disable

namespace PGSystem_DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250219084740_Update_IsDeleted_GrowthRecord")]
    partial class Update_IsDeleted_GrowthRecord
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("AdminName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Alert", b =>
                {
                    b.Property<int>("AlertID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertID"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasKey("AlertID");

                    b.HasIndex("PID");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Blog", b =>
                {
                    b.Property<int>("BID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BID"));

                    b.Property<int>("AID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("BID");

                    b.HasIndex("AID");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Comment", b =>
                {
                    b.Property<int>("CID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CID"));

                    b.Property<int>("BID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CID");

                    b.HasIndex("BID");

                    b.HasIndex("MemberID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.GrowthRecord", b =>
                {
                    b.Property<int>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GID"));

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("GID");

                    b.HasIndex("PID");

                    b.ToTable("GrowthRecords");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MembershipID")
                        .HasColumnType("int");

                    b.Property<int?>("UserUID")
                        .HasColumnType("int");

                    b.HasKey("MemberID");

                    b.HasIndex("MembershipID");

                    b.HasIndex("UserUID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Membership", b =>
                {
                    b.Property<int>("MID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("MID");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.PregnancyGrowthReport", b =>
                {
                    b.Property<int>("PGID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PGID"));

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PID")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("PGID");

                    b.HasIndex("PID");

                    b.ToTable("PregnancyGrowthReports");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.PregnancyRecord", b =>
                {
                    b.Property<int>("PID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PID"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemberMemberID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PID");

                    b.HasIndex("MemberMemberID")
                        .IsUnique();

                    b.ToTable("PregnancyRecords");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.RStatus", b =>
                {
                    b.Property<int>("SID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SID"));

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SID");

                    b.ToTable("RStatuses");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Reminder", b =>
                {
                    b.Property<int>("RID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RID"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<int>("SID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("RID");

                    b.HasIndex("MemberID");

                    b.HasIndex("SID");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.User", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UID"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UID = 1,
                            CreateAt = new DateTime(2025, 2, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "admin@gmail.com",
                            Password = "12345",
                            Phone = "0123456789",
                            Role = "Admin",
                            UpdateAt = new DateTime(2025, 2, 19, 15, 47, 40, 138, DateTimeKind.Local).AddTicks(7148)
                        });
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Admin", b =>
                {
                    b.HasOne("PGSystem_DataAccessLayer.Entities.User", "User")
                        .WithMany("Admins")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Alert", b =>
                {
                    b.HasOne("PGSystem_DataAccessLayer.Entities.PregnancyRecord", "PregnancyRecord")
                        .WithMany("Alerts")
                        .HasForeignKey("PID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PregnancyRecord");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Blog", b =>
                {
                    b.HasOne("PGSystem_DataAccessLayer.Entities.Member", "Member")
                        .WithMany("Blogs")
                        .HasForeignKey("AID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Comment", b =>
                {
                    b.HasOne("PGSystem_DataAccessLayer.Entities.Blog", "Blog")
                        .WithMany()
                        .HasForeignKey("BID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PGSystem_DataAccessLayer.Entities.Member", null)
                        .WithMany("Comments")
                        .HasForeignKey("MemberID");

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.GrowthRecord", b =>
                {
                    b.HasOne("PGSystem_DataAccessLayer.Entities.PregnancyRecord", "PregnancyRecord")
                        .WithMany("GrowthRecords")
                        .HasForeignKey("PID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PregnancyRecord");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Member", b =>
                {
                    b.HasOne("PGSystem_DataAccessLayer.Entities.Membership", "Membership")
                        .WithMany("Members")
                        .HasForeignKey("MembershipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PGSystem_DataAccessLayer.Entities.User", null)
                        .WithMany("Members")
                        .HasForeignKey("UserUID");

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.PregnancyGrowthReport", b =>
                {
                    b.HasOne("PGSystem_DataAccessLayer.Entities.PregnancyRecord", "PregnancyRecord")
                        .WithMany("PregnancyGrowthReports")
                        .HasForeignKey("PID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PregnancyRecord");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.PregnancyRecord", b =>
                {
                    b.HasOne("PGSystem_DataAccessLayer.Entities.Member", "Member")
                        .WithOne("PregnancyRecord")
                        .HasForeignKey("PGSystem_DataAccessLayer.Entities.PregnancyRecord", "MemberMemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Reminder", b =>
                {
                    b.HasOne("PGSystem_DataAccessLayer.Entities.Member", "Member")
                        .WithMany("Reminders")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PGSystem_DataAccessLayer.Entities.RStatus", "RStatus")
                        .WithMany("Reminders")
                        .HasForeignKey("SID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("RStatus");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Member", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Comments");

                    b.Navigation("PregnancyRecord")
                        .IsRequired();

                    b.Navigation("Reminders");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.Membership", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.PregnancyRecord", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("GrowthRecords");

                    b.Navigation("PregnancyGrowthReports");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.RStatus", b =>
                {
                    b.Navigation("Reminders");
                });

            modelBuilder.Entity("PGSystem_DataAccessLayer.Entities.User", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
